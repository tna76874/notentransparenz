{"config":{"lang":["de"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Notentransparenz","text":"<p>Alle \u00c4nderungen dieser Website sind \u00f6ffentlich unter https://github.com/tna76874/notentransparenz/commits/main dokumentiert.</p> <p>Die Notenbildungsverordnung (NVO) ist hier als PDF abrufbar.</p> <p>Download: Notentransparenz</p>"},{"location":"Noten/","title":"Noten","text":"<pre><code>!pip uninstall notenbildung -y &gt; /dev/null 2&gt;&amp;1\n!pip install git+https://github.com/tna76874/notentransparenz.git@92def6cf4d986082cd5a4e82dbdba007e2f7fcd9 &gt; /dev/null 2&gt;&amp;1\n\nfrom notenbildung.models import *\n</code></pre> <p>Noten zwischen den Notensystemen N und NP umgerechnet werden.</p> <pre><code>eine_note = NoteEntity(15,system = SystemNP)\nprint(eine_note)\neine_note.to(SystemNPS)\nprint(eine_note)\neine_note.to(SystemN)\nprint(eine_note)\neine_note.to(SystemNORM)\neine_note.to(SystemNP)\nprint(eine_note)\n</code></pre> <pre><code>15.0\n0.666666666666667\nWARNING: Inkonsistent System conversion\n1.0\n15.0\n</code></pre> <p>Das Verrechnen von Noten wird direkt \u00fcber das '+'-Zeichen erledigt. Dabei wird die Gewichtung mitgerechnet.</p> <pre><code>ka = Weight(NoteEntity(3), NoteEntity(4), NoteEntity(3.5)).normalize()\nkt = Weight(NoteEntity(3), NoteEntity(1), NoteEntity(2.5)).set_weight(1)\nm\u00fcndlich = Weight(NoteEntity(2), NoteEntity(1), NoteEntity(3)).set_weight(1)\n\nprint(f'KA: {ka}, KT: {kt}, m\u00fcndlich: {m\u00fcndlich}')\n\nschriftlich = ka + kt\n\ngesamt = schriftlich.set_weight(3) + m\u00fcndlich\n\nprint(f'schriftlich: {schriftlich}, gesamt: {gesamt}')\n</code></pre> <pre><code>KA: 3*3.5, KT: 1*2.1666666666666665, m\u00fcndlich: 1*2.0\nschriftlich: 3*3.1666666666666665, gesamt: 4*2.875\n</code></pre> <p>Die Gesamtnote l\u00e4sst sich auch im zeitlichen Verlauf visualisieren.</p> <pre><code>noten = Notenberechnung(w_s0=1, w_sm=3, system = SystemN)\nnoten.note_hinzufuegen(art='KA', date = '2024-04-10', note=2, status='fertig')\nnoten.note_hinzufuegen(art='KA', date = '2024-04-15', note=2.5, status='fertig')\nnoten.note_hinzufuegen(art='KA', date = '2024-03-01', note=4.5, status='fertig')\nnoten.note_hinzufuegen(art='KA', date = '2024-03-15', note=5, status='fertig')\nnoten.note_hinzufuegen(art='KT', date = '2024-02-01', note=4, status='fehlt')\nnoten.note_hinzufuegen(art='KT', date = '2024-01-01', note=2.75, status='fehlt')\nnoten.note_hinzufuegen(art='m', date = '2023-09-01', note=3.0)\nnoten.note_hinzufuegen(art='m', date = '2023-10-01', note=3.25)\nnoten.note_hinzufuegen(art='m', date = '2023-11-01', note=3.5)\n\ngesamtnote = noten.berechne_gesamtnote()\nprint(gesamtnote)\nnoten.plot_time_series()\n</code></pre> <pre><code>m_s1=3.4821428571428568, m_s=3.4290540540540535, m_m=3.25, gesamtnote=3.3842905405405403, datum=15.04.2024\n</code></pre> <p></p> <p>Es k\u00f6nnen alle Noten angezeigt werden, die erteilt wurden.</p> <pre><code>noten._get_full_dataframe()\n</code></pre> date art status note nr von bis due 0 2023-09-01 m --- 3.0 1.0 2023-09-01 2023-09-01 None 1 2023-10-01 m --- 3.25 2.0 2023-10-01 2023-10-01 None 2 2023-11-01 m --- 3.5 3.0 2023-11-01 2023-11-01 None 3 2024-01-01 KT fehlt 2.75 1.0 NaT NaT None 4 NaT V --- 3.75 NaN NaT NaT None 5 2024-02-01 KT fehlt 4.0 2.0 NaT NaT None 6 NaT V --- 3.75 NaN NaT NaT None 7 2024-03-01 KA fertig 4.5 1.0 NaT NaT None 8 NaT V --- 3.25 NaN NaT NaT None 9 2024-03-15 KA fertig 5.0 2.0 NaT NaT None 10 NaT V --- 3.25 NaN NaT NaT None 11 2024-04-10 KA fertig 2.0 3.0 NaT NaT None 12 NaT V --- 3.25 NaN NaT NaT None 13 2024-04-15 KA fertig 2.5 4.0 NaT NaT None 14 NaT V --- 3.25 NaN NaT NaT None"},{"location":"Noten_Excel/","title":"Noten Excel","text":"<pre><code>!pip uninstall notenbildung -y &gt; /dev/null 2&gt;&amp;1\n!pip install git+https://github.com/tna76874/notentransparenz.git@92def6cf4d986082cd5a4e82dbdba007e2f7fcd9 &gt; /dev/null 2&gt;&amp;1\n\nfrom notenbildung.excel import *\n</code></pre> <pre><code>ExcelFileLoader(\"meine_notenliste.xlsx\").export()\n</code></pre> <pre><code>sid: 1\nvorname: Max\nnachname: Mustermann\nWarnung: Zu wenige Leistungen: [&lt;class 'notenbildung.nvo.LeistungKA'&gt;]: Anzahl der Leistungen 1&lt;4\nsid: 2\nvorname: Mini\nnachname: Musterfrau\nWarnung: Zu wenige Leistungen: [&lt;class 'notenbildung.nvo.LeistungKA'&gt;]: Anzahl der Leistungen 1&lt;4\nsid: 3\nvorname: Peter\nnachname: Pan\nWarnung: Zu wenige Leistungen: [&lt;class 'notenbildung.nvo.LeistungKA'&gt;]: Anzahl der Leistungen 1&lt;4\n</code></pre>"},{"location":"abgabe/","title":"digitale Abgabe","text":"<p>Wird die Verbesserung digital \u00fcber den Link abgegeben, stellt ein Algorithmus vor dem Upload sicher, dass die Bildqualit\u00e4t entsprechend gut ist. Wenn ein Dokument nicht den visuellen Qualit\u00e4tsanspr\u00fcchen gen\u00fcgt, dann wird der Upload automatisiert abgelehnt. Nach erfolgreichem Upload der Abgabe wird ein Zeitstempel angezeigt.</p>"},{"location":"abgabe/#beispiele-fur-gute-und-schlechte-scans","title":"Beispiele f\u00fcr gute und schlechte Scans","text":""},{"location":"abgabe/#schlechte-scans","title":"Schlechte Scans","text":""},{"location":"abgabe/#gute-scans","title":"Gute Scans","text":""},{"location":"abgabe/#wie-erstelle-ich-gute-scans-von-dokumenten","title":"Wie erstelle ich gute Scans von Dokumenten","text":""},{"location":"abgabe/#aufnahme-mit-einem-scanner","title":"Aufnahme mit einem Scanner","text":"<p>Die beste Bildqualit\u00e4t l\u00e4sst sich mit einem konventionellen Scanner erreichen. Wer ausserhalb der Schule keinen Zugriff auf einen Scanner hat, der hat die M\u00f6glichkeit mit einem USB-Stick, auf Nachfrage bei der Lehrkraft, darauf Scans der Abgaben in der Schule zu speichern.</p>"},{"location":"abgabe/#aufnahme-mit-einer-scanner-app","title":"Aufnahme mit einer Scanner-App","text":"<p>Es gibt unz\u00e4hlige Apps, mit denen aus einem Foto ein Dokument extrahiert und visuell verbessert werden kann. Bei der Wahl einer entsprechenden App sollte nach pers\u00f6nlichen Vorlieben recherchiert und ausgew\u00e4hlt werden. Im Folgenden ein paar examplarische Empfehlungen:</p> <ul> <li> <p>Genius Scan: Android | iOS</p> </li> <li> <p>Adobe Scan: Android | iOS</p> </li> <li> <p>Microsoft Lens: Android | iOS</p> </li> </ul> <p>Durch die Nutzung einer Scanner-App im A4-Hochkant-Format bei guter Beleuchtung entspricht die Abgabe mit hoher Wahrscheinlichkeit den visuellen Qualit\u00e4tsanspr\u00fcchen.</p>"},{"location":"korrektur/","title":"Korrekturzeichen","text":"<p>Es werden die Korrekturzeichen aus den Beurteilungs- und Korrekturrichtlinien f\u00fcr die Abiturpr\u00fcfung verwendet. Jedes richtige Teilergebnis wird im Text mit \u201er\u201c, jedes falsche Teilergebnis mit \u201ef\u201c gekennzeichnet. Fehler werden im Text unterstrichen. Wird mit dem Fehler richtig weitergerechnet, so werden die folgenden Teilergebnisse mit \u201e(r)\u201c vermerkt. An dem Rand wird das passende Korrekturzeichen vermerkt.</p>"},{"location":"korrektur/#mathematik","title":"Mathematik","text":"Fehlerart Beschreibung D Denkfehler Fs Fachsprache, Fachbegriff fehlt oder wurde falsch verwendet R Rechenfehler S Schreibfehler uv unvollst\u00e4ndig Vz Vorzeichenfehler"},{"location":"korrektur/#physik","title":"Physik","text":"Fehlerart Beschreibung D Denkfehler Fs Fachsprache, Fachbegriff fehlt oder wurde falsch verwendet M falsche oder fehlende Ma\u00dfeinheit Ph fehlendes Physikverst\u00e4ndnis R Rechenfehler S Schreibfehler uv unvollst\u00e4ndig Vz Vorzeichenfehler"},{"location":"korrektur/#informatik","title":"Informatik","text":"Fehlerart Beschreibung D Denkfehler Fs Fachsprache, Fachbegriff fehlt oder wurde falsch verwendet Log Logik R Rechenfehler S Schreibfehler Syn Syntaxfehler, zum Beispiel in der verwendeten Programmiersprache uv unvollst\u00e4ndig Vz Vorzeichenfehler"},{"location":"python/","title":"Noten berechnen mit python","text":"<p>Als Hilfestellung bei der Berechnung der Noten wird im Rahmen der Notentransparenz ein python-Modul zur Verf\u00fcgung gestellt. Dieses kann \u00fcber die \"launch binder\"-Buttons im Browser und ohne lokale Installation genutzt werden.</p>"},{"location":"python/#installation","title":"Installation","text":"<pre><code>pip install git+https://github.com/tna76874/notentransparenz.git@703cfd0cb45bc6349ae07cbb69538bfc07e62b4c\n</code></pre> <pre><code>#!/usr/bin/env python3\n# -*- coding: utf-8 -*-\n\"\"\"\nBeispiel\n\"\"\"\n\nfrom notenbildung.notenbildung import *\n\nnoten = Notenberechnung(w_s0=1, w_sm=3, system = SystemN, v_enabled=True, w_th = 0.4)\nnoten.note_hinzufuegen(art='KA', date = '2024-04-10', note=2, status='fertig')\nnoten.note_hinzufuegen(art='KA', date = '2024-04-15', note=2.5, status='fertig')\nnoten.note_hinzufuegen(art='KA', date = '2024-03-01', note=3, status='fertig')\nnoten.note_hinzufuegen(art='KA', date = '2024-03-15', note=5, status='fertig')\nnoten.note_hinzufuegen(art='KT', date = '2024-02-01', note=4, status='fertig')\nnoten.note_hinzufuegen(art='KT', date = '2024-01-01', note=2.75, status='fertig')\nnoten.note_hinzufuegen(art='m', date = '2023-09-01', note=3.0)\nnoten.note_hinzufuegen(art='m', date = '2023-10-01', note=3.25)\nnoten.note_hinzufuegen(art='m', date = '2023-11-01', note=3.5)\n\ngesamtnote = noten.berechne_gesamtnote()\nprint(gesamtnote)\nnoten.plot_time_series()\n</code></pre>"},{"location":"python/#excel-import","title":"Excel Import","text":"<pre><code>#!/usr/bin/env python3\n# -*- coding: utf-8 -*-\n\"\"\"\nBeispiel Excel\n\"\"\"\n\nfrom notenbildung.notenbildung import *\n\nnoten = Notenberechnung(w_s0=1, w_sm=3, system = SystemN, v_enabled=True)\nnoten.add_from_excel('data.xlsx')\n\ngesamtnote = noten.berechne_gesamtnote()\nprint(gesamtnote)\nnoten.plot_time_series()\n</code></pre>"},{"location":"python/#lerngruppe-verwalten","title":"Lerngruppe verwalten","text":"<pre><code>#!/usr/bin/env python3\n# -*- coding: utf-8 -*-\n\"\"\"\nBeispiel: Noten mit Lerngruppen\n\"\"\"\nfrom notenbildung.models import *\n\n# es gibt die F\u00e4cher FachM, FachPH und FachINF\n# eine fachpraktische Leistung P wird als Kurztest gez\u00e4hlt, z\u00e4hlt jedoch nicht in die Anzahl der schriftlichen Leistungen mit hinein.\n\nmeinfach = FachM\nnote = Notenberechnung(w_s0=1, w_sm=3, system = SystemN, v_enabled=True, w_th = 0.4, fach=meinfach)\n# note = NotenberechnungSimple(w_s0=1, w_sm=3, system = SystemN, v_enabled=True, w_th = 0.4, fach=meinfach)\nnote.note_hinzufuegen(art='KA', date = '2024-04-10', note=3, status='---')\nnote.note_hinzufuegen(art='KA', date = '2024-04-15', note=2.5, status='uv')\nnote.note_hinzufuegen(art='KA', date = '2024-03-01', note=4, status='fertig')\nnote.note_hinzufuegen(art='P', date = '2024-03-15', note=5)\nnote.note_hinzufuegen(art='KT', date = '2024-02-01', note=4, status='offen', due = '2024-05-05')\nnote.note_hinzufuegen(art='S', date = '2024-01-01', note=2.75)\nnote.note_hinzufuegen(art='m', date = '2023-09-01', note=3.0)\nnote.note_hinzufuegen(art='m', date = '2023-10-01', note=3.25)\nnote.note_hinzufuegen(art='m', date = '2023-11-01', note=3.5)\n\ngesamtnote = note.berechne_gesamtnote()\nprint(gesamtnote)\n\nschueler1 = SchuelerEntity(sid=1, vorname='Max', nachname='Mustermann')\nschueler1.setze_note(note)\n\nschueler2 = SchuelerEntity(sid='abc', vorname='Mini', nachname='Musterfrau')\nschueler2.setze_note(note)\n\nlerngruppe1 = LerngruppeEntity(stufe=7, fach=meinfach, zug='A')\n\nlerngruppe1.update_sid(schueler1)\nlerngruppe1.update_sid(schueler2)\n\nlerngruppe1.plot_sid(1)\nlerngruppe1.plot_sid('abc')\n\nprint(lerngruppe1.get_dataframe())\nprint(schueler1.get_dataframe())\n</code></pre>"},{"location":"python/#lerngruppe-aus-excel-importieren-und-ergebnisse-exportieren","title":"Lerngruppe aus Excel importieren und Ergebnisse exportieren","text":"<p>Bei dem Import werden zuerst verschiedene Randbedingungen validiert. Wenn alle Angaben in der richtigen Form sind, dann wird gem\u00e4\u00df den Parametern die Note berechnet und in einen Unterordner exportiert.</p> <pre><code>#!/usr/bin/env python3\n# -*- coding: utf-8 -*-\n\"\"\"\nBeispiel Excel Export\n\"\"\"\n\nfrom notenbildung.excel import *\n\nExcelFileLoader(\"meine_notenliste.xlsx\").export()\n</code></pre> <p></p> <p>Unter der Kommandozeile l\u00e4sst sich dieser Export mit z.B. <code>notenbildung meine_excelliste.xlsx</code> durchf\u00fchren.</p>"},{"location":"python/#notebooks","title":"Notebooks","text":""},{"location":"python/#noten-berechnen-in-einem-notebook","title":"Noten berechnen in einem Notebook","text":"<pre><code>!pip uninstall notenbildung -y &gt; /dev/null 2&gt;&amp;1\n!pip install git+https://github.com/tna76874/notentransparenz.git@92def6cf4d986082cd5a4e82dbdba007e2f7fcd9 &gt; /dev/null 2&gt;&amp;1\n\nfrom notenbildung.models import *\n</code></pre> <p>Noten zwischen den Notensystemen N und NP umgerechnet werden.</p> <pre><code>eine_note = NoteEntity(15,system = SystemNP)\nprint(eine_note)\neine_note.to(SystemNPS)\nprint(eine_note)\neine_note.to(SystemN)\nprint(eine_note)\neine_note.to(SystemNORM)\neine_note.to(SystemNP)\nprint(eine_note)\n</code></pre> <pre><code>15.0\n0.666666666666667\nWARNING: Inkonsistent System conversion\n1.0\n15.0\n</code></pre> <p>Das Verrechnen von Noten wird direkt \u00fcber das '+'-Zeichen erledigt. Dabei wird die Gewichtung mitgerechnet.</p> <pre><code>ka = Weight(NoteEntity(3), NoteEntity(4), NoteEntity(3.5)).normalize()\nkt = Weight(NoteEntity(3), NoteEntity(1), NoteEntity(2.5)).set_weight(1)\nm\u00fcndlich = Weight(NoteEntity(2), NoteEntity(1), NoteEntity(3)).set_weight(1)\n\nprint(f'KA: {ka}, KT: {kt}, m\u00fcndlich: {m\u00fcndlich}')\n\nschriftlich = ka + kt\n\ngesamt = schriftlich.set_weight(3) + m\u00fcndlich\n\nprint(f'schriftlich: {schriftlich}, gesamt: {gesamt}')\n</code></pre> <pre><code>KA: 3*3.5, KT: 1*2.1666666666666665, m\u00fcndlich: 1*2.0\nschriftlich: 3*3.1666666666666665, gesamt: 4*2.875\n</code></pre> <p>Die Gesamtnote l\u00e4sst sich auch im zeitlichen Verlauf visualisieren.</p> <pre><code>noten = Notenberechnung(w_s0=1, w_sm=3, system = SystemN)\nnoten.note_hinzufuegen(art='KA', date = '2024-04-10', note=2, status='fertig')\nnoten.note_hinzufuegen(art='KA', date = '2024-04-15', note=2.5, status='fertig')\nnoten.note_hinzufuegen(art='KA', date = '2024-03-01', note=4.5, status='fertig')\nnoten.note_hinzufuegen(art='KA', date = '2024-03-15', note=5, status='fertig')\nnoten.note_hinzufuegen(art='KT', date = '2024-02-01', note=4, status='fehlt')\nnoten.note_hinzufuegen(art='KT', date = '2024-01-01', note=2.75, status='fehlt')\nnoten.note_hinzufuegen(art='m', date = '2023-09-01', note=3.0)\nnoten.note_hinzufuegen(art='m', date = '2023-10-01', note=3.25)\nnoten.note_hinzufuegen(art='m', date = '2023-11-01', note=3.5)\n\ngesamtnote = noten.berechne_gesamtnote()\nprint(gesamtnote)\nnoten.plot_time_series()\n</code></pre> <pre><code>m_s1=3.4821428571428568, m_s=3.4290540540540535, m_m=3.25, gesamtnote=3.3842905405405403, datum=15.04.2024\n</code></pre> <p></p> <p>Es k\u00f6nnen alle Noten angezeigt werden, die erteilt wurden.</p> <pre><code>noten._get_full_dataframe()\n</code></pre> date art status note nr von bis due 0 2023-09-01 m --- 3.0 1.0 2023-09-01 2023-09-01 None 1 2023-10-01 m --- 3.25 2.0 2023-10-01 2023-10-01 None 2 2023-11-01 m --- 3.5 3.0 2023-11-01 2023-11-01 None 3 2024-01-01 KT fehlt 2.75 1.0 NaT NaT None 4 NaT V --- 3.75 NaN NaT NaT None 5 2024-02-01 KT fehlt 4.0 2.0 NaT NaT None 6 NaT V --- 3.75 NaN NaT NaT None 7 2024-03-01 KA fertig 4.5 1.0 NaT NaT None 8 NaT V --- 3.25 NaN NaT NaT None 9 2024-03-15 KA fertig 5.0 2.0 NaT NaT None 10 NaT V --- 3.25 NaN NaT NaT None 11 2024-04-10 KA fertig 2.0 3.0 NaT NaT None 12 NaT V --- 3.25 NaN NaT NaT None 13 2024-04-15 KA fertig 2.5 4.0 NaT NaT None 14 NaT V --- 3.25 NaN NaT NaT None"},{"location":"python/#noten-berechnen-aus-einer-excel-tabelle","title":"Noten berechnen aus einer Excel-Tabelle","text":"<pre><code>!pip uninstall notenbildung -y &gt; /dev/null 2&gt;&amp;1\n!pip install git+https://github.com/tna76874/notentransparenz.git@92def6cf4d986082cd5a4e82dbdba007e2f7fcd9 &gt; /dev/null 2&gt;&amp;1\n\nfrom notenbildung.excel import *\n</code></pre> <pre><code>ExcelFileLoader(\"meine_notenliste.xlsx\").export()\n</code></pre> <pre><code>sid: 1\nvorname: Max\nnachname: Mustermann\nWarnung: Zu wenige Leistungen: [&lt;class 'notenbildung.nvo.LeistungKA'&gt;]: Anzahl der Leistungen 1&lt;4\nsid: 2\nvorname: Mini\nnachname: Musterfrau\nWarnung: Zu wenige Leistungen: [&lt;class 'notenbildung.nvo.LeistungKA'&gt;]: Anzahl der Leistungen 1&lt;4\nsid: 3\nvorname: Peter\nnachname: Pan\nWarnung: Zu wenige Leistungen: [&lt;class 'notenbildung.nvo.LeistungKA'&gt;]: Anzahl der Leistungen 1&lt;4\n</code></pre>"}]}